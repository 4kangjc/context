# Boost.Context Library Examples Jamfile

#          Copyright Oliver Kowalke 2014.
# Distributed under the Boost Software License, Version 1.0.
#    (See accompanying file LICENSE_1_0.txt or copy at
#          http://www.boost.org/LICENSE_1_0.txt)

# For more information, see http://www.boost.org/

import common ;
import feature ;
import indirect ;
import modules ;
import os ;
import toolset ;
import architecture ;

project boost/context/example/fiber
    : requirements
      <library>/boost/context//boost_context
      <target-os>linux,<toolset>gcc,<segmented-stacks>on:<cxxflags>-fsplit-stack
      <target-os>linux,<toolset>gcc,<segmented-stacks>on:<cxxflags>-DBOOST_USE_SEGMENTED_STACKS
      <toolset>clang,<segmented-stacks>on:<cxxflags>-fsplit-stack
      <toolset>clang,<segmented-stacks>on:<cxxflags>-DBOOST_USE_SEGMENTED_STACKS
      <link>static
      <threading>multi
    ;

exe stack
    : stack.cpp
    ;

exe jump_void
    : jump_void.cpp
    ;

exe jump
    : jump.cpp
    ;

exe jump_mov
    : jump_mov.cpp
    ;

exe ontop_void
    : ontop_void.cpp
    ;

exe throw
    : throw.cpp
    ;

exe fibonacci
    : fibonacci.cpp
    ;

exe parser
    : parser.cpp
    ;

exe ontop
    : ontop.cpp
    ;

exe endless_loop
    : endless_loop.cpp
    ;

exe segmented
    : segmented.cpp
    ;

exe circle
    : circle.cpp
    ;

#exe backtrace
#    : backtrace.cpp
#    ;

#exe echosse
#    : echosse.cpp
#    ;

exe server
  : echo_server.cpp
    /boost/system//boost_system
    /boost/chrono//boost_chrono
  : <define>BOOST_ALL_NO_LIB=1
    <threading>multi
    <target-os>solaris:<library>socket
    <target-os>solaris:<library>nsl
    <target-os>windows:<define>_WIN32_WINNT=0x0501
    <target-os>windows,<toolset>gcc:<library>ws2_32
    <target-os>windows,<toolset>gcc:<library>mswsock
    <target-os>windows,<toolset>gcc-cygwin:<define>__USE_W32_SOCKETS
    <target-os>hpux,<toolset>gcc:<define>_XOPEN_SOURCE_EXTENDED
    <target-os>hpux:<library>ipv6
    <target-os>haiku:<library>network
  ;

  exe client
  : echo_client.cpp
    /boost/system//boost_system
    /boost/chrono//boost_chrono
  : <define>BOOST_ALL_NO_LIB=1
    <threading>multi
    <target-os>solaris:<library>socket
    <target-os>solaris:<library>nsl
    <target-os>windows:<define>_WIN32_WINNT=0x0501
    <target-os>windows,<toolset>gcc:<library>ws2_32
    <target-os>windows,<toolset>gcc:<library>mswsock
    <target-os>windows,<toolset>gcc-cygwin:<define>__USE_W32_SOCKETS
    <target-os>hpux,<toolset>gcc:<define>_XOPEN_SOURCE_EXTENDED
    <target-os>hpux:<library>ipv6
    <target-os>haiku:<library>network
  ;
